From 5560ac1711a07705e8fdb232726593f957d6dd5a Mon Sep 17 00:00:00 2001
From: pancake <pancake@nopcode.org>
Date: Mon, 29 Mar 2021 16:29:45 +0200
Subject: [PATCH 23/23] Undef LoadImage for windows

---
 Ghidra/Features/Decompiler/src/decompile/cpp/float.cc      | 7 ++++---
 Ghidra/Features/Decompiler/src/decompile/cpp/loadimage.hh  | 4 ++++
 .../Features/Decompiler/src/decompile/cpp/string_ghidra.cc | 2 +-
 Ghidra/Features/Decompiler/src/decompile/cpp/types.h       | 3 +--
 4 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/float.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/float.cc
index 9b044d0c1..c0b659c18 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/float.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/float.cc
@@ -48,6 +48,7 @@ inline int4 isinf(double x) {
 // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=48891
 #define isnan std::isnan
 #define isinf std::isinf
+#define signbit std::signbit
 
 #endif
 
@@ -111,10 +112,10 @@ FloatFormat::floatclass FloatFormat::extractExpSig(double x,bool *sgn,uintb *sig
 {
   int4 e;
 
-  *sgn = std::signbit(x);
+  *sgn = signbit(x);
   if (x == 0.0) return zero;
-  if (std::isinf(x)) return infinity;
-  if (std::isnan(x)) return nan;
+  if (isinf(x)) return infinity;
+  if (isnan(x)) return nan;
   if (*sgn)
     x = -x;
   double norm = frexp(x,&e);  // norm is between 1/2 and 1
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/loadimage.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/loadimage.hh
index 59d4c9a5d..35577447f 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/loadimage.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/loadimage.hh
@@ -21,6 +21,10 @@
 
 #include "address.hh"
 
+#ifdef LoadImage
+#undef LoadImage
+#endif
+
 /// \brief Exception indicating data was not available
 ///
 /// This exception is thrown when a request for load image
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/string_ghidra.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/string_ghidra.cc
index 080f543ce..ac7a4c710 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/string_ghidra.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/string_ghidra.cc
@@ -40,7 +40,7 @@ const vector<uint1> &GhidraStringManager::getStringData(const Address &addr,Data
 
   StringData &stringData(stringMap[addr]);
   stringData.isTruncated = false;
-  glb->getStringData(stringData.byteData, addr, charType, maximumChars,stringData.isTruncated);
+  glb->getStringData(stringData.byteData, addr, charType, maximumChars, stringData.isTruncated);
   isTrunc = stringData.isTruncated;
   return stringData.byteData;
 }
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/types.h b/Ghidra/Features/Decompiler/src/decompile/cpp/types.h
index 69779f711..bddac2b0d 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/types.h
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/types.h
@@ -109,7 +109,7 @@ typedef char int1;
 typedef uint8 uintp;
 #endif
 
-#if defined(_WINDOWS)
+#if _MSC_VER > 0
 
 #if defined(_WIN64)
 
@@ -243,7 +243,6 @@ typedef uint8 uintp;
 #define UINTB8
 
 typedef int8 intb;		/* This is a signed big integer */
-//#include "integer.hh"
 #ifdef UINTB8
 typedef uint8 uintb;		/* This is an unsigned big integer */
 #else
-- 
2.24.3 (Apple Git-128)

