diff --git a/src/decompiler/printc.cc b/src/decompiler/printc.cc
index cc002a2..44de2eb 100644
--- a/src/decompiler/printc.cc
+++ b/src/decompiler/printc.cc
@@ -52,7 +52,7 @@ OpToken PrintC::boolean_and = { "&&", 2, 22, false, OpToken::binary, 1, 0, (OpTo
 OpToken PrintC::boolean_xor = { "^^", 2, 20, false, OpToken::binary, 1, 0, (OpToken *)0 };
 OpToken PrintC::boolean_or = { "||", 2, 18, false, OpToken::binary, 1, 0, (OpToken *)0 };
 OpToken PrintC::assignment = { "=", 2, 14, false, OpToken::binary, 1, 5, (OpToken *)0 };
-OpToken PrintC::comma = { ",", 2, 2, true, OpToken::binary, 0, 0, (OpToken *)0 };
+OpToken PrintC::comma = { ", ", 2, 2, true, OpToken::binary, 0, 0, (OpToken *)0 };
 OpToken PrintC::new_op = { "", 2, 62, false, OpToken::space, 1, 0, (OpToken *)0 };
 
 // Inplace assignment operators
@@ -1861,7 +1861,7 @@ void PrintC::emitStructDefinition(const TypeStruct *ct)
     pushTypeEnd((*iter).type);
     iter++;
     if (iter != ct->endField()) {
-      emit->print(","); // Print comma separator
+      emit->print(", "); // Print comma separator
       emit->tagLine();
     }
   }
@@ -1960,7 +1960,7 @@ void PrintC::emitPrototypeInputs(const FuncProto *proto)
     bool printComma = false;
     for(int4 i=0;i<sz;++i) {
       if (printComma)
-	emit->print(",");
+	emit->print(", ");
       ProtoParameter *param = proto->getParam(i);
       if (isSet(hide_thisparam) && param->isThisPointer())
 	continue;
@@ -1979,7 +1979,7 @@ void PrintC::emitPrototypeInputs(const FuncProto *proto)
   }
   if (proto->isDotdotdot()) {
     if (sz != 0)
-      emit->print(",");
+      emit->print(", ");
     emit->print("...");
   }
 }
@@ -2432,7 +2432,7 @@ void PrintC::emitBlockBasic(const BlockBasic *bb)
 	continue;
       if (separator) {
 	if (isSet(comma_separate)) {
-	  emit->print(",");
+	  emit->print(", ");
 	  emit->spaces(1);
 	}
 	else {
